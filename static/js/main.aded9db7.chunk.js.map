{"version":3,"sources":["assets/logo.png","components/random-user/random-user.component.jsx","components/help/help.component.jsx","components/side-nav/side-nav.component.jsx","components/form-input/form-input.component.jsx","components/custom-button/custom-button.component.jsx","components/recipe-form/recipe-form.component.jsx","components/result-tile/result-tile.component.jsx","components/upload-image-box/upload-image-box.component.jsx","components/nutrition-analisys/nutrition-analisys.component.jsx","components/calories-goal/calories-goal.component.jsx","components/view-button/view-button.component.jsx","components/recipe-preview-info/recipe-preview-info.component.jsx","components/recipe-preview/recipe-preview.component.jsx","components/last-recipes/last-recipes.component.jsx","components/recipe-image/recipe-image.component.jsx","pages/nutrition/nutrition.component.jsx","pages/recipes/recipes.component.jsx","pages/goal/goal.component.jsx","pages/recipe-details/recipe-details.component.jsx","pages/profile/profile.component.jsx","pages/instructions/instructions.component.jsx","pages/stored-recipe-details/stored-recipe-details.component.jsx","App.js","index.js"],"names":["module","exports","RandomUser","state","users","fetch","then","results","a","async","json","data","map","user","push","firstName","name","first","lastName","last","street","location","city","postcode","username","login","password","phone","smallPicture","picture","thumbnail","large","mediumPicture","medium","age","dob","setState","localStorage","setItem","JSON","stringify","i","this","length","className","src","alt","Component","Help","onOpenModal","open","onCloseModal","onClose","center","onClick","React","SideNav","to","FormInput","handleChange","placeholder","otherProps","onChange","CustomButton","children","isBtnAdd","RecipeForm","props","event","target","value","createIngredient","e","preventDefault","ingredList","id","Math","random","iId","iName","ingredient","removeIngred","key","splice","console","log","handleSubmit","title","preparation","ingredForRecipe","recipe","option","method","mode","body","headers","response","ok","recipeId","prep","calories","dietLabels","energy","totalNutrients","ENERC_KCAL","quantity","proteins","PROCNT","fats","FAT","saturated","FASAT","carbohydrates","CHOCDF","trans","FATRN","fiber","FIBTG","sugars","SUGAR","cholesterol","CHOLE","sodium","NA","swal","window","reload","catch","err","type","onSubmit","required","ResultTile","icon","result","boxName","UploadImageBox","btnText","NutritionAnalisys","onDrop","imageRecipe","images","floor","image","imgId","saveRecipe","reloadPage","parse","getItem","existingRecipes","toFixed","CaloriesGoal","calories_daily","calories_left","style","parseFloat","h4Red","color","ViewButton","isBtnViewAll","RecipePreviewInfo","recipeInfo","recipeName","RecipePreview","LastRecipes","recipes","recipeItem","reverse","slice","item","setId","RecipeImage","NutritionPage","recipeImage","RecipesPage","GoalPage","goal","RecipeDetailsPage","currentRecipe","Profile","pictureLarge","data-img","data-first","data-last","number","Instructions","StoredRecipeDetails","storedRecipes","selectItemId","App","logo","exact","path","component","RecipeDetails","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aded9db7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c052027a.png\";","import React, {Component} from 'react';\n\nimport './random-user.styles.scss';\n\nclass RandomUser extends Component { \n    state = {\n        users: []\n    }\n\n// Fetch Random User API\nasync componentDidMount(){\n    await fetch('https://randomuser.me/api/?results=1')\n          .then(async results => {\n            return await results.json()\n          })\n          .then(data => {\n            let users = []\n            data.results.map((user) => {\n                users.push({firstName: user.name.first, lastName: user.name.last, \n                            street: user.location.street, city: user.location.city,\n                            state: user.location.state, postcode: user.location.postcode,\n                            username: user.login.username, password: user.login.password,\n                            phone: user.phone, smallPicture: user.picture.thumbnail, picture: user.picture.large, mediumPicture: user.picture.medium,\n                            age: user.dob.age})\n                return users\n            })\n            this.setState({users: users})\n            localStorage.setItem('users', JSON.stringify(this.state.users))\n          })\n    }\n      \n    render(){\n\n        let picture = ''\n        let firstName = ''\n        for(let i = 0; i < this.state.users.length; i++) {\n            picture = this.state.users[0].smallPicture\n            firstName = this.state.users[0].firstName\n        }\n    return(\n        <div className='cont-profile'>\n            <div className='nav-profile'>\n                <img src={picture} className='profile' alt='User Profile'/>\n                <p>Hi {firstName}!</p>\n            </div>\n        </div>\n        )\n    }\n}\n    \nexport default RandomUser\n\n","import React from 'react';\n\nimport './help.styles.scss';\n\nimport Modal from 'react-responsive-modal' \nimport { FaQuestion } from 'react-icons/fa';\nimport { MdPhone } from 'react-icons/md';\nimport { MdEmail } from 'react-icons/md';\n\n\n\nclass Help extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            open: false,\n        }\n    }\n\n    onOpenModal = () => {\n        this.setState({ open: true });\n    }\n    \n    onCloseModal = () => {\n        this.setState({ open: false });\n    }\n\n    render() {\n        const { open } = this.state;\n        return(\n            <div className='cont-help'>\n                <div>\n                    <Modal open={open} onClose={this.onCloseModal} center>\n                        <div className='modal-support'>\n                            <h1 className='h1'>Customer Support</h1>\n                            <p className='p'>To reach Eat Green Customer Support:</p>\n                            <p className='p'><MdEmail className='mdEmail' /> customersupport@eatgreen.com</p>\n                            <p className='p'><MdPhone className='mdPhone' /> 1(800) 837-9017</p>\n                        </div>\n                    </Modal>\n                </div>\n                <FaQuestion className='question' onClick={this.onOpenModal} />\n            </div>\n        )\n    }\n};\n\nexport default Help;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport RandomUser from '../random-user/random-user.component';\nimport Help from '../help/help.component'\n\nimport { IoMdPerson } from 'react-icons/io';\nimport { GiStairsGoal } from 'react-icons/gi'\nimport { IoIosLeaf } from 'react-icons/io'\nimport { GiHotMeal } from 'react-icons/gi'\nimport { FaClipboardList } from 'react-icons/fa'\n\nimport './side-nav.styles.scss';\n\nconst SideNav = () => (\n    <div className='sidenav'>\n        <RandomUser />\n        <div className='options'>\n            <Link className='option' to='/home'>\n                <IoIosLeaf className='icon' />\n                Home\n            </Link>\n            <Link className='option' to='/profile'>\n                <IoMdPerson className='icon' />\n                Profile\n            </Link>\n            <Link className='option' to='/goal'>\n                <GiStairsGoal className='icon' />\n                Goal\n            </Link>\n            <Link className='option' to='/recipes'>\n                <GiHotMeal className='icon' />\n                Recipes\n            </Link>\n            <Link className='option' to='/instructions'>\n                <FaClipboardList className='icon' />\n                Instructions\n            </Link>\n        </div>\n        <Help />\n    </div>\n);\n\nexport default SideNav;","import React from 'react';\n\nimport './form-input.styles.scss';\n\n\nconst FormInput = ({ handleChange, placeholder, ...otherProps}) => (\n    <div className='group'>\n        <input className='form-input' onChange={handleChange} {...otherProps} placeholder={placeholder} />\n    </div>\n);\n\nexport default FormInput;","import React from 'react';\n\nimport './custom-button.styles.scss';\n\nconst CustomButton = ({ children, isBtnAdd, ...otherProps}) => (\n    <button \n        className={`${isBtnAdd ? 'btn-add': '' } custom-button`}\n        {...otherProps}\n    >\n        {children}\n    </button>\n);\n\nexport default CustomButton;","import React from 'react';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { IoIosClose } from 'react-icons/io'\nimport swal from 'sweetalert';\n\nimport './recipe-form.styles.scss';\n\nclass RecipeForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            title: '',\n            preparation: '',\n            ingredient: '',\n            ingredList: [],\n            results: []\n        }\n    }\n\n    handleChange = event => {\n        const { value, name } = event.target;\n\n        this.setState({ [name]: value })\n    }\n\n    // functioon to add a new ingredient\n    createIngredient = e => {\n        e.preventDefault();\n\n        let ingredList = [];\n        let id = Math.random();\n        ingredList = [...this.state.ingredList, {iId: id, iName: this.state.ingredient}];\n        this.setState({ingredList});\n\n        // Clear Input\n        this.setState({ingredient: ''});\n    }\n\n    // Function to remove ingredient\n    removeIngred = key => {\n        let ingredList = [...this.state.ingredList]\n        for (let i = 0; i < ingredList.length; i++) {\n            if(ingredList[i].iId === key) {\n                this.state.ingredList.splice(i, 1)\n                this.setState({ingredList: this.state.ingredList})\n            }\n        }\n        console.log('Ingred Removed')\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        const { title, preparation, ingredList } = this.state;\n\n        let ingredForRecipe = [];\n        ingredList.map(ingredient => {\n            return ingredForRecipe.push(ingredient.iName);\n        })\n\n        // API url\n        let app_id = 'adc095e3';\n        let app_key = '998f1868f0f3bdc14e1070d4772ae0f3';\n        const urlAPI = 'https://api.edamam.com/api/nutrition-details?app_id=' + app_id + '&app_key=' + app_key;\n\n        // Recipe object\n        const recipe = {\n            \"title\": title,\n            \"prep\": preparation,\n            \"ingr\": ingredForRecipe\n        }\n\n        // Method POST\n        const option = {\n            method: 'POST',\n            mode: 'cors',\n            body: JSON.stringify(recipe),\n            headers: {\n                'content-type': 'application/json'\n            }\n        }\n\n        // Fetch request\n        fetch(urlAPI, option)\n            .then( response => {\n                if(response.ok) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            })\n            .then ( data => {\n                let results = [];\n                let key = Math.random();\n                results.push({recipeId: key, title: title, prep: preparation, calories: data.calories, dietLabels: data.dietLabels,\n                             energy: data.totalNutrients.ENERC_KCAL.quantity, proteins: data.totalNutrients.PROCNT.quantity,\n                             fats: data.totalNutrients.FAT.quantity, saturated: data.totalNutrients.FASAT.quantity,\n                             carbohydrates: data.totalNutrients.CHOCDF.quantity, trans: data.totalNutrients.FATRN.quantity,\n                             fiber: data.totalNutrients.FIBTG.quantity, sugars: data.totalNutrients.SUGAR.quantity, \n                             cholesterol: data.totalNutrients.CHOLE.quantity, sodium: data.totalNutrients.NA.quantity});\n                this.setState({results: results});\n\n                // Save result on Local Storage\n                localStorage.setItem('results', JSON.stringify(this.state.results));\n            })\n            .then (function() {\n                swal(\"Good job!\", \"Recipe sent for analisys!\", \"success\")\n                .then(() => {\n                    window.location.reload(false);\n                })\n            })\n            .catch( err => {\n                swal(\"Oops!\", \"Recipe with insufficient quality to process correctly\", \"error\");\n                console.log(err);\n            })\n\n        // Clear form\n        this.setState({ title: '', preparation: '',  ingredList: []})\n    }\n    \n\n    render() {\n        let ingredList = this.state.ingredList.map(ingredient => {\n            return <div className='ingredient-item' key={ingredient.iId}>\n                        <h6 className='h6'>{ingredient.iName}</h6>\n                        <button className='remove-item' type='button' onClick={() => this.removeIngred(ingredient.iId)}><IoIosClose className='icon-remove' /></button> \n                    </div>\n        })\n        return(\n            <div className='recipe-form'>\n                <h1>Your healthy food</h1>\n                <form onSubmit={this.handleSubmit}>\n                    <FormInput\n                        name=\"title\"\n                        type='text'\n                        handleChange={this.handleChange}\n                        value={this.state.title}\n                        placeholder='Recipe title'\n                        required\n                    />\n                    <FormInput\n                        name=\"preparation\"\n                        type='text'\n                        value={this.state.preparation}\n                        handleChange={this.handleChange}\n                        placeholder='Preparation'\n                        required\n                    />\n                    <div className='cont-add-ingred'>\n                        <FormInput\n                            name=\"ingredient\"\n                            type='text'\n                            value={this.state.ingredient}\n                            handleChange={this.handleChange}\n                            placeholder='Add ingredients...'\n                            //required\n                        />\n                        <CustomButton type='button' isBtnAdd onClick={this.createIngredient}> Add </CustomButton>\n                    </div>\n                    <div className='ingredients-list'>\n                        {ingredList}\n                    </div>\n                    <div className='cont-btn-submit'>\n                        <CustomButton type='submit'> Submit </CustomButton>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n};\n\nexport default RecipeForm;\n\n","import React from 'react';\n\nimport './result-tile.styles.scss';\n\nconst ResultTile = (props) => (\n    <div className='result-tile'>\n        {props.icon} {props.result} {props.boxName}\n    </div>\n)\n\nexport default ResultTile;","import React from 'react';\n\nimport './upload-image-box.styles.scss';\n\nconst UploadImageBox = (props) => (\n    <button className='upload-image-box' onClick={props.onClick}>\n        {props.icon}\n        {props.btnText}\n    </button>\n)\n\nexport default UploadImageBox;","import React from 'react';\n\nimport ResultTile from '../result-tile/result-tile.component';\nimport UploadImageBox from '../upload-image-box/upload-image-box.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { GoFlame } from 'react-icons/go';\nimport { MdFitnessCenter } from 'react-icons/md';\nimport { GiFat } from 'react-icons/gi';\nimport { GiWheat } from 'react-icons/gi';\nimport { IoMdAdd } from 'react-icons/io';\nimport swal from 'sweetalert';\n\nimport './nutrition-analisys.styles.scss';\n\nclass NutritionAnalisys extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            results: [],\n            images: [],\n            imageRecipe: []\n        }\n    }\n\n    // Function to get results from Local Storage\n    async componentDidMount() {\n        let results;                                                                                                                  // eslint-disable-next-line\n        if(results = JSON.parse(localStorage.getItem('results'))) {\n            results = JSON.parse(localStorage.getItem('results'));\n            this.setState({results: results});\n        } \n\n        // Load stock images\n        fetch('data/images.json', {\n            headers : { \n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n             }\n      \n          })\n            .then( response => {\n                if(response.ok) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            })\n            .then ( data => {\n                this.setState({images: data.images});\n            })\n            .catch( err => {\n                console.log(err);\n            })\n    }\n\n    // Funtion to save a random image for testing\n    onDrop = e => {\n        e.preventDefault();\n        let imageRecipe;\n        let images = [];\n        images = [...this.state.images];\n\n        let id = Math.floor(Math.random() * 12) + 1;\n\n        for (let i = 0; i < images.length; i++) {\n            if(images[i].id === id) {\n                swal(\"Image info:\", \"Uploading a stock image for testing reason\", \"info\");\n                imageRecipe = [{image: images[i].src, imgId: images[i].id}]\n            }\n            \n        }\n        this.setState({imageRecipe: imageRecipe});\n    }\n\n    // Save recipe with image in Local storage\n    saveRecipe () {\n         let recipe = [];\n         recipe = [...this.state.results, ...this.state.imageRecipe];\n\n        // Save recipe on Local Storage\n        // Parse any JSON previously stored in recipes\n        let existingRecipes = JSON.parse(localStorage.getItem(\"recipes\"));\n        if(existingRecipes == null) existingRecipes = [];\n        localStorage.setItem('currentRecipe', JSON.stringify(recipe));\n        // Save all recipes back to local storage\n        existingRecipes.push(recipe);\n        localStorage.setItem('recipes', JSON.stringify(existingRecipes));\n    }\n\n    reloadPage() {\n        swal(\"Good job!\", \"Recipe saved\", \"success\")\n        .then(() => {\n            window.location.reload(false);\n        })\n    }\n\n    onClick = e => {\n        e.preventDefault();\n        this.saveRecipe();\n        this.reloadPage();\n    }\n\n    render() {\n        let calories = '';\n        let proteins = '';\n        let fats = '';\n        let carbohydrates = '';\n        for(let i = 0; i < this.state.results.length; i++) {\n            calories = this.state.results[0].calories;\n            proteins = this.state.results[0].proteins.toFixed(2);\n            fats = this.state.results[0].fats.toFixed(2);\n            carbohydrates = this.state.results[0].carbohydrates.toFixed(2);\n        }\n        return(\n            <div className='nutrition-analisys'>\n                <h2>\n                    Nutrition Analisys:\n                </h2>\n                <div className='result-grid'>\n                    <ResultTile icon={<GoFlame className='icon' />} result={<h3>{calories}</h3>} boxName='calories' />\n                    <ResultTile icon={<MdFitnessCenter className='icon' />} result={<h3>{proteins}</h3>} boxName='proteins' />\n                    <ResultTile icon={<GiFat className='icon' />} result={<h3>{fats}</h3>} boxName='fats' />\n                    <ResultTile icon={<GiWheat className='icon' />} result={<h3>{carbohydrates}</h3>} boxName='carbs' />\n\n                    <UploadImageBox icon={<IoMdAdd className='icon' />} btnText={<h3>Add Image</h3>} onClick={this.onDrop} />\n                </div>\n                <div className='cont-btn-submit'>\n                    <CustomButton type='button' onClick={this.onClick}> Save </CustomButton>\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default NutritionAnalisys;","import React from 'react';\n\nimport './calories-goal.styles.scss';\n\nclass CaloriesGoal extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            calories_daily: '',\n            calories_left: ''\n        }\n    }\n\n    componentDidMount() {\n        let calories_daily;    \n        let calories_left;                                                                                                                               // eslint-disable-next-line\n        if((calories_daily = JSON.parse(localStorage.getItem('goal'))) && (calories_left = JSON.parse(localStorage.getItem('currentRecipe')))) {\n            calories_daily = JSON.parse(localStorage.getItem('goal'));\n            calories_left = JSON.parse(localStorage.getItem('currentRecipe'));\n            this.setState({calories_daily: calories_daily, calories_left: calories_daily - calories_left[0].calories});\n        }                                        \n        \n    }\n\n    render() {\n        let style = {};\n        const calories_left = parseFloat(this.state.calories_left);\n        if(calories_left < 0) {\n            style = {\n                h4Red: {\n                    color: '#ff0000'\n                }\n            }\n        } else {\n            style = {\n                h4Red: {\n                    color: '#3E4F70'\n                }\n            }\n        }\n        return(\n            <div className='calories-cont'>\n                <div className='calories-box'>\n                    <p>Calories daily</p>\n                    <div className='calories-number'>\n                        <h4>{this.state.calories_daily}</h4>\n                    </div>\n                </div>\n                <div className='calories-box'>\n                    <p>Calories left</p>\n                    <div className='calories-number'>\n                        <h4 style={style.h4Red}>{this.state.calories_left}</h4>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default CaloriesGoal;","import React from 'react';\n\nimport './view-button.styles.scss';\n\nconst ViewButton = ({ children, isBtnViewAll, ...otherProps}) => (\n    <button \n        className={`${isBtnViewAll ? 'btn-view-all': '' } view-button`}\n        {...otherProps}\n    >\n        {children}\n    </button>\n);\n\nexport default ViewButton;","import React from 'react';\n\nimport './recipe-preview-info.scss';\n\nimport { GoFlame } from 'react-icons/go';\nimport { GiWheat } from 'react-icons/gi';\nimport{ GiFat } from 'react-icons/gi'\n\nclass RecipePreviewInfo extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            recipeInfo: []\n        }\n    }\n\n    componentDidMount() {\n        let recipeInfo;                                                                                                                  // eslint-disable-next-line\n        if(recipeInfo = JSON.parse(localStorage.getItem('recipes'))) {\n            recipeInfo = JSON.parse(localStorage.getItem('recipes'));\n            this.setState({recipeInfo: recipeInfo});\n        }\n        \n    }\n\n    render() {\n        let recipeName = '';\n        let calories = '';\n        let fats = '';\n        let carbohydrates = '';\n        for(let i = 0; i < this.state.recipeInfo.length; i++) {\n            recipeName = this.state.recipeInfo[i][0].title;\n            calories = this.state.recipeInfo[i][0].calories;\n            fats = this.state.recipeInfo[i][0].fats.toFixed(2);\n            carbohydrates = this.state.recipeInfo[i][0].carbohydrates.toFixed(2);\n        }\n        return(\n            <div className='recipe-preview-info'>\n                <h3>{recipeName}</h3>\n                <div className='info-item'>\n                    <GoFlame className='icon-info' />\n                    <h4>{calories} kcal</h4>    \n                </div>\n                <div className='info-item'>\n                    <GiWheat className='icon-info' />\n                    <h4>{carbohydrates} g</h4>    \n                </div>\n                <div className='info-item'>\n                    <GiFat className='icon-info' />\n                    <h4>{fats} g</h4>    \n                </div>\n            </div>\n        )\n    }\n};\n\nexport default RecipePreviewInfo;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './recipe.preview.styles.scss';\n\nimport ViewButton from '../view-button/view-button.component';\nimport RecipePreviewInfo from '../recipe-preview-info/recipe-preview-info.component';\n\nconst RecipePreview = (props) => (\n    <div className='recipe-preview'>\n        {props.image}\n\n        <RecipePreviewInfo />\n        <Link className='link' to='/recipe-details'>\n            <ViewButton type='button' > View Recipe </ViewButton>\n        </Link>\n    </div>\n);\n\nexport default RecipePreview;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './last-recipes.styles.scss';\n\nimport ViewButton from '../view-button/view-button.component';\n\nclass LastRecipes extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            recipes: []\n        }\n    }\n\n    componentDidMount() {\n        let recipes;                                                                                                                  // eslint-disable-next-line\n        if(recipes = JSON.parse(localStorage.getItem('recipes'))) {\n            recipes = JSON.parse(localStorage.getItem('recipes'));\n            this.setState({recipes: recipes});\n        }                                              \n    }\n\n    setId(id) {\n        localStorage.setItem('selectItemId', JSON.stringify(id));\n    }\n\n    render() {\n        let recipeItem = this.state.recipes.reverse().slice(0, 8).map(item => {\n            return  <Link key={item[0].recipeId} className='recipe-item' onClick={() => this.setId(item[0].recipeId)} to='/stored-recipe-details'>\n                        <img className='last-image' src={item[1].image} alt='Recipe' />\n                        <h4>{item[0].title}</h4>\n                    </Link>\n        })\n\n        return(\n            <div className='last-recipes'>\n                {recipeItem}\n\n                <Link className='link' to='/recipes'>\n                    <ViewButton type='button' isBtnViewAll > View All </ViewButton>\n                </Link>\n            </div>\n        )\n    }\n};\n\nexport default LastRecipes;","import React from 'react';\n\nimport './recipe-image.styles.scss';\n\nconst RecipeImage = (props) => (\n    <div className='img-wrapper'>\n        <img className='recipe-image' src={props.src} alt={props.alt} />\n    </div>\n);\n\nexport default RecipeImage;","import React from 'react';\n\nimport './nutrition.styles.scss';\n\nimport RecipePreview from '../../components/recipe-preview/recipe-preview.component';\nimport LastRecipes from '../../components/last-recipes/last-recipes.component';\nimport RecipeImage from '../../components/recipe-image/recipe-image.component';\n\nclass NutritionPage extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            recipes: []\n        }\n    }\n\n    componentDidMount() {\n        let recipes;                                                                                                                  // eslint-disable-next-line\n        if(recipes = JSON.parse(localStorage.getItem('recipes'))) {\n            recipes = JSON.parse(localStorage.getItem('recipes'));\n            this.setState({recipes: recipes});\n        }\n      }\n\n    render() {\n        let recipeImage = '';\n        for(let i = 0; i < this.state.recipes.length; i++) {\n        recipeImage = this.state.recipes[i][1].image;\n        }\n\n        return(\n            <div>\n                <RecipePreview \n                    image={<RecipeImage src={recipeImage}\n                    alt='Recipe Picture' />}\n                >\n                </RecipePreview>\n                <LastRecipes />\n            </div>\n        )\n    }\n};\n\nexport default NutritionPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './recipes.styles.scss';\n\nclass RecipesPage extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            recipes: []\n        }\n    }\n\n    componentDidMount() {\n        let recipes;                                                                                                                  // eslint-disable-next-line\n        if(recipes = JSON.parse(localStorage.getItem('recipes'))) {\n            recipes = JSON.parse(localStorage.getItem('recipes'));\n            this.setState({recipes: recipes});\n        }                                              \n        \n    }\n\n    setId(id) {\n        localStorage.setItem('selectItemId', JSON.stringify(id));\n    }\n\n    render() {\n\n        let recipeItem = this.state.recipes.slice(0, 16).map(item => {\n            return  <Link key={item[0].recipeId} className='recipe-item' onClick={() => this.setId(item[0].recipeId)} to='/stored-recipe-details'>\n                        <img className='last-image' src={item[1].image} alt='Recipe' />\n                        <h4>{item[0].title}</h4>\n                    </Link>\n        })\n\n        return(\n            <div className='recipes-wrapper'>\n                {recipeItem}\n\n            </div>\n        )\n    }\n};\n\nexport default RecipesPage;","import React from 'react';\n\nimport './goal.styes.scss';\n\nimport FormInput from '../../components/form-input/form-input.component';\nimport CustomButton from '../../components/custom-button/custom-button.component';\n\nimport swal from 'sweetalert';\n\nclass GoalPage extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            goal: ''\n        }\n    }\n\n    handleChange = event => {\n        const { value, name } = event.target;\n\n        this.setState({ [name]: value })\n    }\n\n    handleSubmit = async event => {\n\n        // Save goal on Local Storage\n        localStorage.setItem('goal', JSON.stringify(this.state.goal));\n\n        // Clear form\n        this.setState({ goal: ''});\n    }\n\n    reloadPage() {\n        swal(\"Good job!\", \"Goal saved\", \"success\")\n        .then(() => {\n            window.location.reload(false);\n        })\n        \n    }\n\n    onSubmit = e => {\n        e.preventDefault();\n        this.handleSubmit();\n        this.reloadPage();\n    }\n\n    render() {\n\n        return(\n            <div className='goal-wrapper'>\n                <h2>Make Your Goal:</h2>\n                <div className='form-wrapper'>\n                    <form onSubmit={this.onSubmit}>\n                        <div className='cont-save-input'>\n                            <div className='input'>\n                                <FormInput\n                                    name=\"goal\"\n                                    type='number'\n                                    handleChange={this.handleChange}\n                                    value={this.state.goal}\n                                    placeholder='Calories goal'\n                                    required\n                                />\n                            </div>\n                            <div className='button'>\n                                <CustomButton type='submit'> Save </CustomButton>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default GoalPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './recipe-details.styles.scss';\n\nimport RecipeImage from '../../components/recipe-image/recipe-image.component';\nimport ViewButton from '../../components/view-button/view-button.component';\n\nclass RecipeDetailsPage extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            currentRecipe: []\n        }\n    }\n\n    componentDidMount() {\n        let currentRecipe;                                                                                                                  // eslint-disable-next-line\n        if(currentRecipe = JSON.parse(localStorage.getItem('currentRecipe'))) {\n            currentRecipe = JSON.parse(localStorage.getItem('currentRecipe'));\n            this.setState({currentRecipe: currentRecipe});\n        }\n        \n    }\n\n    render() {\n        let recipeName = '';\n        let preparation = '';\n        let calories = '';\n        let fats = '';\n        let carbohydrates = '';\n        let recipeImage = '';\n        let proteins = '';\n        let dietLabels = '';\n        let energy = '';\n        let saturated = '';\n        let trans = '';\n        let fiber = '';\n        let sugars = '';\n        let cholesterol = '';\n        let sodium = '';\n        for(let i = 0; i < this.state.currentRecipe.length; i++) {\n            recipeImage = this.state.currentRecipe[1].image;\n            recipeName = this.state.currentRecipe[0].title;\n            preparation = this.state.currentRecipe[0].prep;\n            dietLabels = this.state.currentRecipe[0].dietLabels;\n            calories = this.state.currentRecipe[0].calories;\n            fats = this.state.currentRecipe[0].fats.toFixed(2);\n            carbohydrates = this.state.currentRecipe[0].carbohydrates.toFixed(2);\n            proteins = this.state.currentRecipe[0].proteins.toFixed(2);\n            energy = this.state.currentRecipe[0].energy.toFixed(2);\n            saturated = this.state.currentRecipe[0].saturated.toFixed(2);\n            trans = this.state.currentRecipe[0].trans.toFixed(2);\n            fiber = this.state.currentRecipe[0].fiber.toFixed(2);\n            sugars = this.state.currentRecipe[0].sugars.toFixed(2);\n            cholesterol = this.state.currentRecipe[0].cholesterol.toFixed(2);\n            sodium = this.state.currentRecipe[0].sodium.toFixed(2);\n        }\n\n        return(\n            <div className='recipe-details'> \n                <RecipeImage src={recipeImage} alt='Current Recipe' />\n                <h3>{recipeName}</h3>\n\n                <div className='recipe-main-info'>\n                    <div className='main-info-prep'>\n                        <h5>Preparation:</h5>\n                        <p>{preparation}</p>\n                    </div>\n                    <div className='main-info'>\n                        <h5>Calories</h5>\n                        <p>{calories}</p>\n                    </div>\n                    <div className='main-info'>\n                        <h5>Diet Labels</h5>\n                        <p>{dietLabels}</p>\n                    </div>\n                </div>\n\n                <div className='table'>\n                    <div className='th'>\n                        <div className='td'>\n                        </div>\n                        <div className='td'>\n                            <h6>Quantity</h6>\n                        </div>\n                        <div className='td'>\n                            <h6>Unit</h6>\n                        </div>\n                    </div>\n                    <div className='tr'>\n                        <div className='td'>\n                            <h6>Energy</h6>\n                        </div>\n                        <div className='td'>\n                            <p>{energy}</p>\n                        </div>\n                        <div className='td'>\n                            <p>kcal</p>\n                        </div>\n                    </div>\n                    <div className='tr'>\n                        <div className='td'>\n                            <h6>Fat</h6>\n                        </div>\n                        <div className='td'>\n                            <p>{fats}</p>\n                        </div>\n                        <div className='td'>\n                            <p>g</p>\n                        </div>\n                    </div>\n                    <div className='tr'>\n                        <div className='td'>\n                            <h6>Saturated</h6>\n                        </div>\n                        <div className='td'>\n                            <p>{saturated}</p>\n                        </div>\n                        <div className='td'>\n                            <p>g</p>\n                        </div>\n                    </div>\n                    <div className='tr'>\n                        <div className='td'>\n                            <h6>Trans</h6>\n                        </div>\n                        <div className='td'>\n                            <p>{trans}</p>\n                        </div>\n                        <div className='td'>\n                            <p>g</p>\n                        </div>\n                    </div>\n                    <div className='tr'>\n                        <div className='td'>\n                            <h6>Carbs</h6>\n                        </div>\n                        <div className='td'>\n                            <p>{carbohydrates}</p>\n                        </div>\n                        <div className='td'>\n                            <p>g</p>\n                        </div>\n                    </div>\n                    <div className='tr'>\n                        <div className='td'>\n                            <h6>Fiber</h6>\n                        </div>\n                        <div className='td'>\n                            <p>{fiber}</p>\n                        </div>\n                        <div className='td'>\n                            <p>g</p>\n                        </div>\n                    </div>\n                    <div className='tr'>\n                        <div className='td'>\n                            <h6>Sugars</h6>\n                        </div>\n                        <div className='td'>\n                            <p>{sugars}</p>\n                        </div>\n                        <div className='td'>\n                            <p>g</p>\n                        </div>\n                    </div>\n                    <div className='tr'>\n                        <div className='td'>\n                            <h6>Protein</h6>\n                        </div>\n                        <div className='td'>\n                            <p>{proteins}</p>\n                        </div>\n                        <div className='td'>\n                            <p>g</p>\n                        </div>\n                    </div>\n                    <div className='tr'>\n                        <div className='td'>\n                            <h6>Cholesterol</h6>\n                        </div>\n                        <div className='td'>\n                            <p>{cholesterol}</p>\n                        </div>\n                        <div className='td'>\n                            <p>mg</p>\n                        </div>\n                    </div>\n                    <div className='tr'>\n                        <div className='td'>\n                            <h6>Sodium</h6>\n                        </div>\n                        <div className='td'>\n                            <p>{sodium}</p>\n                        </div>\n                        <div className='td'>\n                            <p>mg</p>\n                        </div>\n                    </div>\n                </div>\n                <Link className='link' to='/home'>\n                    <ViewButton type='button' > Close </ViewButton>\n                </Link>\n            </div>\n        )\n    }\n};\n\nexport default RecipeDetailsPage;","import React from 'react';\n\nimport './profile.styles.scss';\n\nimport { MdPlace } from 'react-icons/md';\nimport { MdPhone } from 'react-icons/md';\n\nclass Profile extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            user: []\n        }\n    }\n\n    componentDidMount() {\n        let user;                                                                                                                  // eslint-disable-next-line\n        if(user = JSON.parse(localStorage.getItem('users'))) {\n            user = JSON.parse(localStorage.getItem('users'));\n            this.setState({user: user});\n        } \n    }\n\n\n    render() {\n        let firstName = ''\n        let lastName = ''\n        let pictureLarge = ''\n        let mediumPicture = ''\n        let street = ''\n        let city = ''\n        let state = []\n        let postcode = ''\n        let phone = ''\n        let age = ''\n        let username = ''\n        let password = ''\n        for(let i = 0; i < this.state.user.length; i++) {\n            firstName = this.state.user[0].firstName\n            lastName = this.state.user[0].lastName\n            pictureLarge = this.state.user[0].picture\n            mediumPicture = this.state.user[0].mediumPicture\n            street = this.state.user[0].street\n            city = this.state.user[0].city\n            state = this.state.user[0].state\n            postcode = this.state.user[0].postcode\n            phone = this.state.user[0].phone\n            age = this.state.user[0].age\n            username = this.state.user[0].username\n            password = this.state.user[0].password\n        }\n        return(\n            <div className='profile-wrapper'>\n                <div className='imgWrapper'>\n                    <img id='userImage' src={pictureLarge} alt='User Profile' data-img={mediumPicture} data-first={firstName} data-last={lastName}/>\n                </div>\n                <h2 className='h2'>{firstName} {lastName}</h2>\n                <h3>Personal Info</h3>\n                <div className='cont-border'>\n                    <h4 className='h4'>Age: {age}</h4>\n                    <p className='p'><MdPlace className='mdPlace' /> {street.number}{street.key}, {city}, {state} {postcode}</p>\n                    <p className='p'><MdPhone className='mdPhone' /> {phone}</p>\n                </div>\n                <h3>Confidential Details</h3>\n                <div className='cont-border'>\n                    <div className='details'>\n                        <h4 className='h4'>Username: {username}</h4>\n                    </div>\n                    <div className='details'>\n                        <h4 className='h4'>Password: {password}</h4>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Profile;","import React from 'react';\n\nimport './instructions.styles.scss';\n\nconst Instructions = () => (\n    <div className='inst-wrapper'>\n                <h2>Instructions:</h2>\n                <div className='inst-container'>\n                    <div className='step'>\n                        <h5>Step 1</h5>\n                        <p>Complete the homepage form to send the recipe to be analysed.</p>\n                        <p><strong>Recipe example:</strong></p>\n                        <p><strong>Title:</strong> Fresh Ham Roasted</p>\n                        <p><strong>Preparation:</strong> 1. Have your butcher bone and butterfly the ham and score the fat in a diamond pattern. ...</p>\n                        <p><strong>Ingredients:</strong></p>\n                        <p>- 1 fresh ham, about 18 pounds, prepared by your butcher (See Step 1)</p>\n                        <p>- 7 cloves garlic, minced</p>\n                        <p>- 1 tablespoon caraway seeds, crushed</p>\n                        <p>- 4 teaspoons salt</p>\n                        <p>- Freshly ground pepper to taste</p>\n                        <p>- 1 teaspoon olive oil</p>\n                        <p>- 1 medium onion, peeled and chopped</p>\n                        <p>- 3 cups sourdough rye bread, cut into 1/2-inch cubes</p>\n                        <p>- 1 1/4 cups coarsely chopped pitted prunes</p>\n                        <p>- 1 1/4 cups coarsely chopped dried apricots</p>\n                        <p>- 1 large tart apple, peeled, cored and cut into 1/2-inch cubes</p>\n                        <p>- 2 teaspoons chopped fresh rosemary</p>\n                        <p>- 1 egg, lightly beaten</p>\n                        <p>- 1 cup chicken broth, homemade or low-sodium canned</p>\n                        <p><strong>Note:</strong> Make sure to enter enough ingredients to have sufficient quality to analyse the recipe.</p>\n                    </div>\n                    <div className='step'>\n                        <h5>Step 2</h5>\n                        <p>Add an image to your recipe in \"Nutrition Analisys\" results.</p>\n                    </div>\n                    <div className='step'>\n                        <h5>Step 3</h5>\n                        <p>Save your recipe with the image added in the previous step and its nutrition result into your database.</p>\n                    </div>\n                    <div className='step'>\n                        <h5>Step 4</h5>\n                        <p>Enter in the goal section the maximum number of calories to consume and compare that value with recipe entered.</p>\n                    </div>\n                </div>\n            </div>\n);\n\nexport default Instructions;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './stored-recipe-details.styles.scss';\n\nimport RecipeImage from '../../components/recipe-image/recipe-image.component';\nimport ViewButton from '../../components/view-button/view-button.component';\n\nclass StoredRecipeDetails extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            storedRecipes: [],\n            selectItemId: ''\n        }\n    }\n\n    componentDidMount() {\n        let storedRecipes; \n        let selectItemId;                                                                                                                               // eslint-disable-next-line\n        if((storedRecipes = JSON.parse(localStorage.getItem('recipes'))) && (selectItemId = JSON.parse(localStorage.getItem('selectItemId')))) {\n            storedRecipes = JSON.parse(localStorage.getItem('recipes'));\n            selectItemId = JSON.parse(localStorage.getItem('selectItemId'));\n            this.setState({storedRecipes: storedRecipes, selectItemId: selectItemId});\n        }\n    }\n\n    render() {\n        let recipeName = '';\n        let preparation = '';\n        let calories = '';\n        let fats = '';\n        let carbohydrates = '';\n        let recipeImage = '';\n        let proteins = '';\n        let dietLabels = '';\n        let energy = '';\n        let saturated = '';\n        let trans = '';\n        let fiber = '';\n        let sugars = '';\n        let cholesterol = '';\n        let sodium = '';\n\n        for(let i = 0; i < this.state.storedRecipes.length; i++) {\n            if(this.state.storedRecipes[i][0].recipeId === this.state.selectItemId) {\n                recipeImage = this.state.storedRecipes[i][1].image;\n                recipeName = this.state.storedRecipes[i][0].title;\n                preparation = this.state.storedRecipes[i][0].prep;\n                dietLabels = this.state.storedRecipes[i][0].dietLabels;\n                calories = this.state.storedRecipes[i][0].calories;\n                fats = this.state.storedRecipes[i][0].fats.toFixed(2);\n                carbohydrates = this.state.storedRecipes[i][0].carbohydrates.toFixed(2);\n                proteins = this.state.storedRecipes[i][0].proteins.toFixed(2);\n                energy = this.state.storedRecipes[i][0].energy.toFixed(2);\n                saturated = this.state.storedRecipes[i][0].saturated.toFixed(2);\n                trans = this.state.storedRecipes[i][0].trans.toFixed(2);\n                fiber = this.state.storedRecipes[i][0].fiber.toFixed(2);\n                sugars = this.state.storedRecipes[i][0].sugars.toFixed(2);\n                cholesterol = this.state.storedRecipes[i][0].cholesterol.toFixed(2);\n                sodium = this.state.storedRecipes[i][0].sodium.toFixed(2);\n            }\n        }\n\n        return(\n            <div className='recipe-details'> \n                <RecipeImage src={recipeImage} alt='Current Recipe' />\n                <h3>{recipeName}</h3>\n\n                <div className='recipe-main-info'>\n                    <div className='main-info-prep'>\n                        <h5>Preparation:</h5>\n                        <p>{preparation}</p>\n                    </div>\n                    <div className='main-info'>\n                        <h5>Calories</h5>\n                        <p>{calories}</p>\n                    </div>\n                    <div className='main-info'>\n                        <h5>Diet Labels</h5>\n                        <p>{dietLabels}</p>\n                    </div>\n                </div>\n\n                <div className='table'>\n                    <div className='th'>\n                        <div className='td'>\n                        </div>\n                        <div className='td'>\n                            <h6>Quantity</h6>\n                        </div>\n                        <div className='td'>\n                            <h6>Unit</h6>\n                        </div>\n                    </div>\n                    <div className='tr'>\n                        <div className='td'>\n                            <h6>Energy</h6>\n                        </div>\n                        <div className='td'>\n                            <p>{energy}</p>\n                        </div>\n                        <div className='td'>\n                            <p>kcal</p>\n                        </div>\n                    </div>\n                    <div className='tr'>\n                        <div className='td'>\n                            <h6>Fat</h6>\n                        </div>\n                        <div className='td'>\n                            <p>{fats}</p>\n                        </div>\n                        <div className='td'>\n                            <p>g</p>\n                        </div>\n                    </div>\n                    <div className='tr'>\n                        <div className='td'>\n                            <h6>Saturated</h6>\n                        </div>\n                        <div className='td'>\n                            <p>{saturated}</p>\n                        </div>\n                        <div className='td'>\n                            <p>g</p>\n                        </div>\n                    </div>\n                    <div className='tr'>\n                        <div className='td'>\n                            <h6>Trans</h6>\n                        </div>\n                        <div className='td'>\n                            <p>{trans}</p>\n                        </div>\n                        <div className='td'>\n                            <p>g</p>\n                        </div>\n                    </div>\n                    <div className='tr'>\n                        <div className='td'>\n                            <h6>Carbs</h6>\n                        </div>\n                        <div className='td'>\n                            <p>{carbohydrates}</p>\n                        </div>\n                        <div className='td'>\n                            <p>g</p>\n                        </div>\n                    </div>\n                    <div className='tr'>\n                        <div className='td'>\n                            <h6>Fiber</h6>\n                        </div>\n                        <div className='td'>\n                            <p>{fiber}</p>\n                        </div>\n                        <div className='td'>\n                            <p>g</p>\n                        </div>\n                    </div>\n                    <div className='tr'>\n                        <div className='td'>\n                            <h6>Sugars</h6>\n                        </div>\n                        <div className='td'>\n                            <p>{sugars}</p>\n                        </div>\n                        <div className='td'>\n                            <p>g</p>\n                        </div>\n                    </div>\n                    <div className='tr'>\n                        <div className='td'>\n                            <h6>Protein</h6>\n                        </div>\n                        <div className='td'>\n                            <p>{proteins}</p>\n                        </div>\n                        <div className='td'>\n                            <p>g</p>\n                        </div>\n                    </div>\n                    <div className='tr'>\n                        <div className='td'>\n                            <h6>Cholesterol</h6>\n                        </div>\n                        <div className='td'>\n                            <p>{cholesterol}</p>\n                        </div>\n                        <div className='td'>\n                            <p>mg</p>\n                        </div>\n                    </div>\n                    <div className='tr'>\n                        <div className='td'>\n                            <h6>Sodium</h6>\n                        </div>\n                        <div className='td'>\n                            <p>{sodium}</p>\n                        </div>\n                        <div className='td'>\n                            <p>mg</p>\n                        </div>\n                    </div>\n                </div>\n                <Link className='link' to='/recipes'>\n                    <ViewButton type='button' > Close </ViewButton>\n                </Link>\n            </div>\n        )\n    }\n};\n\nexport default StoredRecipeDetails;","import React from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport './App.css';\n\nimport SideNav from './components/side-nav/side-nav.component'\nimport logo from './assets/logo.png';\nimport RecipeForm from './components/recipe-form/recipe-form.component';\nimport NutritionAnalisys from './components/nutrition-analisys/nutrition-analisys.component';\nimport CaloriesGoal from './components/calories-goal/calories-goal.component';\n\nimport NutritionPage from './pages/nutrition/nutrition.component';\nimport RecipesPage from './pages/recipes/recipes.component';\nimport GoalPage from './pages/goal/goal.component';\nimport RecipeDetails from './pages/recipe-details/recipe-details.component';\nimport Profile from './pages/profile/profile.component';\nimport Instructions from './pages/instructions/instructions.component';\nimport StoredRecipeDetails from './pages/stored-recipe-details/stored-recipe-details.component';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      \n    }\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <SideNav />\n        <div className='left-side'>\n          <div className='cont-nutrition'>\n            <div className='brand-container'>\n              <Link className='container-logo' to='/'>\n                <img className='logo' src={logo} alt=\"Logo\" />\n              </Link>\n              <CaloriesGoal />\n            </div>\n            <RecipeForm />\n            <NutritionAnalisys />\n          </div>\n          <div className='right-side'>\n            <Switch>\n              <Route exact path='/' component={NutritionPage} />\n              <Route path='/home' component={NutritionPage} />\n              <Route path='/profile' component={Profile} />\n              <Route path='/goal' component={GoalPage} />   \n              <Route path='/recipes' component={RecipesPage} />\n              <Route path='/recipe-details' component={RecipeDetails} />\n              <Route path='/stored-recipe-details' component={StoredRecipeDetails} />\n              <Route path='/instructions' component={Instructions} />\n            </Switch>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>\n    , document.getElementById('root')\n);\n"],"sourceRoot":""}